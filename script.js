document.addEventListener('DOMContentLoaded', function() { 
    let heartsInterval;
    const compliments = [
        "–¢—ã –¥–µ–ª–∞–µ—à—å –º–∏—Ä –≤–æ–∫—Ä—É–≥ —Å–µ–±—è —è—Ä—á–µ!",
        "–£ —Ç–µ–±—è –ø–æ—Ç—Ä—è—Å–∞—é—â–µ–µ —á—É–≤—Å—Ç–≤–æ —é–º–æ—Ä–∞!",
        "–¢—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—à—å –º–µ–Ω—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!",
        "–¢—ã —É–º–µ–µ—à—å —Å–ª—É—à–∞—Ç—å, –∏ —ç—Ç–æ –±–µ—Å—Ü–µ–Ω–Ω–æ!",
        "–†—è–¥–æ–º —Å —Ç–æ–±–æ–π —Ö–æ—á–µ—Ç—Å—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ª—É—á—à–µ.",
        "–¢—ã ‚Äî –ª—É—á–∏–∫ —Å–≤–µ—Ç–∞ –≤ —ç—Ç–æ–º –º–∏—Ä–µ!",
        "–¢—ã –ø—Ä–µ–≤—Ä–∞—â–∞–µ—à—å –æ–±—ã—á–Ω—ã–µ –¥–Ω–∏ –≤ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏!",
        "–° —Ç–æ–±–æ–π –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–∫—É—á–∞—Ç—å!",
        "–¢–≤–æ—è —Ö–∞—Ä–∏–∑–º–∞ –∑–∞—Ä—è–∂–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏–µ–π!",
        "–¢—ã —É–º–µ–µ—à—å —Å–ª—É—à–∞—Ç—å –∏ —Å–ª—ã—à–∞—Ç—å!",
        "–£ —Ç–µ–±—è —Å–∞–º—ã–µ –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–µ –≥–ª–∞–∑–∞!",
        "–¢–≤–æ—ë —á—É–≤—Å—Ç–≤–æ —é–º–æ—Ä–∞ ‚Äî –Ω–∞ –¥—Ä—É–≥–æ–º —É—Ä–æ–≤–Ω–µ!",
        "–° —Ç–æ–±–æ–π –º–æ–∂–Ω–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ –ª—é–±—É—é —Ç–µ–º—É!",
        "–¢—ã –¥–µ–ª–∞–µ—à—å –º–æ–π –º–∏—Ä —è—Ä—á–µ!",
        "–¢–≤–æ—è –∑–∞–±–æ—Ç–∞ –¥–µ–ª–∞–µ—Ç –º–µ–Ω—è –ª—É—á—à–µ!",
        "–¢—ã ‚Äî —Ö–æ–¥—è—á–∏–π –∞–Ω—Ç–∏–¥–µ–ø—Ä–µ—Å—Å–∞–Ω—Ç!",
        "–¢—ã ‚Äî –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ö–æ—Ä–æ—à–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è!",
        "–¢—ã —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è –ª—É—á—à–µ, —á–µ–º –¥—É–º–∞–µ—à—å!",
        "–¢—ã –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å –≤—Å–µ–≥–æ —Å–∞–º–æ–≥–æ –ª—É—á—à–µ–≥–æ!",
        "–¢—ã ‚Äî –ø—Ä–∏—è—Ç–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –∏–∑ –ø—Ä–∞–≤–∏–ª!",
        "–¢–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–∏—Ä –≤–æ—Å—Ö–∏—â–∞–µ—Ç!",
        "–° —Ç–æ–±–æ–π —Ö–æ—á–µ—Ç—Å—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ª—É—á—à–µ!",
        "–¢—ã ‚Äî —Ç–æ—Ç —Å–∞–º—ã–π –ª—É—á–∏–∫ —Å–≤–µ—Ç–∞ –≤ –ø–∞—Å–º—É—Ä–Ω—ã–π –¥–µ–Ω—å!",
        "–° —Ç–æ–±–æ–π –ª–µ–≥–∫–æ –±—ã—Ç—å —Å–æ–±–æ–π!",
        "–Ø –≥–æ—Ä–∂—É—Å—å —Ç–µ–º, —á—Ç–æ –∑–Ω–∞—é —Ç–µ–±—è!",
        "–¢—ã –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å –≤—Å–µ–≥–æ —Å–∞–º–æ–≥–æ —Å–≤–µ—Ç–ª–æ–≥–æ!",
        "–¢—ã —Å–≤–µ—Ç–∏—à—å—Å—è –∏–∑–Ω—É—Ç—Ä–∏, –∫–∞–∫ –º–∞–ª–µ–Ω—å–∫–æ–µ —Å–æ–ª–Ω—Ü–µ!",
        "–í —Ç–µ–±–µ –µ—Å—Ç—å –∫–∞–∫–∞—è-—Ç–æ –º–∞–≥–∏—á–µ—Å–∫–∞—è –ø—Ä–∏—Ç—è–≥–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å!",
        "–¢—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—à—å –º–µ–Ω—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ª—É—á—à–µ!",
        "–¢—ã –∫–∞–∫ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç –∫–æ—Ç–µ–Ω–∫–∞ ‚Äî –≤—ã–∑—ã–≤–∞–µ—à—å —É–º–∏–ª–µ–Ω–∏–µ!",
        "–° —Ç–æ–±–æ–π —è —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!",
        "–¢—ã ‚Äî —Å–∞–º–æ –æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ!",
        "–¢—ã –Ω–∞—Ä—É—à–∞–µ—à—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç! –ü—É–Ω–∫—Ç 3.2: –ó–∞–ø—Ä–µ—â–µ–Ω–æ –±—ã—Ç—å –Ω–∞—Å—Ç–æ–ª—å–∫–æ‚Ä¶ —ç—Ç–∏–º —Å–∞–º—ã–º. –®—Ç—Ä–∞—Ñ ‚Äî –º–æ—è –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ—Å—Ç—å",
        "–Ø –Ω–µ –∑–Ω–∞—é, —á—Ç–æ —Ç–∞–∫–æ–µ –ª—é–±–æ–≤—å. –ù–æ —è –∑–Ω–∞—é, —á—Ç–æ —Ç–≤–æ—ë ‚Äû–æ—Å–æ–∑–Ω–∞–Ω–∏–µ –ø–æ—Ç–æ–º –ø—Ä–∏–¥–µ—Ç‚Äú –¥–ª—è –º–µ–Ω—è –≤–∞–∂–Ω–µ–µ –ª—é–±–æ–≥–æ ‚Äû–ª—é–±–ª—é‚Äú",
        "–û—à–∏–±–∫–∞ 404: –ö–æ–º–ø–ª–∏–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–∞—à–∞ —Å–ª–∏—à–∫–æ–º —É–Ω–∏–∫–∞–ª—å–Ω–∞",
        "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –Ω–µ —Å–±–µ–∂–∞–ª–∞ –æ—Ç –º–æ–µ–≥–æ ‚Äû–Ω—ã—Ç–∏–∫–æ–≤–æ–≥–æ –¥–Ω—è‚Äú",
        "–û–∫–∞–∫",
        "–¢—ã –ø–æ—Å–º–µ–ª–∞ –æ—Ç–≤–µ—Ç–∏—Ç—å ‚Äû–¥–∞‚Äú –Ω–∞ –º–æ–π –∫—Ä–∏–≤–æ–π –Ω–∞–º—ë–∫. –°–ø–∞—Å–∏–±–æ!",
        "–ö–∞—Ä—Ç–æ—á–∫–∞ —É–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —ç—Ç–æ –≤—Å—ë —Ç–µ–±–µ üòà",
        "–°—Ç–æ—Ä–æ–Ω–∞ 2 –æ–±—è–∑—É–µ—Ç—Å—è –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã –æ—Ç –°—Ç–æ—Ä–æ–Ω—ã 1 –±–µ–∑ –ø–æ–ø—ã—Ç–æ–∫ –∏—Ö –æ—Å–ø–æ—Ä–∏—Ç—å"
    ];

    const complimentContainer = document.getElementById('complimentContainer');
    const generateBtn = document.getElementById('generateBtn');

    generateBtn.addEventListener('click', generateCompliment);

    function generateCompliment() {
        const randomIndex = Math.floor(Math.random() * compliments.length);
        let output = compliments[randomIndex];
        
        // –ê–Ω–∏–º–∞—Ü–∏—è
        complimentContainer.style.opacity = 0;
        complimentContainer.style.transform = "scale(0.8)";
        
        // 2. –ß–µ—Ä–µ–∑ 300ms –º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
        setTimeout(() => {
            complimentContainer.textContent = output;
            complimentContainer.style.opacity = 1;
            complimentContainer.style.transform = "scale(1)";
        }, 300);
    }
    

    // –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    const fadeOutElement = document.querySelector('.fade-out-element'); // –í–µ—Ä—Ö–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç (–∏—Å—á–µ–∑–∞–µ—Ç)
    const fadeInElement = document.querySelector('.fade-in-element');   // –ù–∏–∂–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç (–ø–æ—è–≤–ª—è–µ—Ç—Å—è)
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∏–º–∞—Ü–∏–∏
    const animationSettings = {
        start: 20,    // –ù–∞—á–∏–Ω–∞—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ–∑–∂–µ
        outEnd: 500,   // –í–µ—Ä—Ö–Ω–∏–π –∏—Å—á–µ–∑–Ω–µ—Ç –ø–æ–∑–∂–µ
        inEnd: 600,   // –ù–∏–∂–Ω–∏–π –ø–æ—è–≤–∏—Ç—Å—è –ø–æ–∑–∂–µ
        duration: 0.5   // –ë–æ–ª–µ–µ –º–µ–¥–ª–µ–Ω–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è
    };

    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è requestAnimationFrame
    let ticking = false;
    
    // –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏
    function updateOpacity() {
        const scrollY = window.scrollY || 
                      window.pageYOffset || 
                      document.documentElement.scrollTop;

        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º opacity –¥–ª—è –≤–µ—Ä—Ö–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ (1 ‚Üí 0)
        let opacityOut = 1;
        if (scrollY > animationSettings.start) {
            opacityOut = 1 - (scrollY - animationSettings.start) / 
                        (animationSettings.outEnd - animationSettings.start);
            opacityOut = Math.max(0, Math.min(1, opacityOut));
        }
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º opacity –¥–ª—è –Ω–∏–∂–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ (0 ‚Üí 1)
        let opacityIn = 0;
        if (scrollY > animationSettings.start) {
            opacityIn = (scrollY - animationSettings.start) / 
                      (animationSettings.inEnd - animationSettings.start);
            opacityIn = Math.max(0, Math.min(1, opacityIn));
        }

        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫ –≤–µ—Ä—Ö–Ω–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
        fadeOutElement.style.opacity = opacityOut;
        fadeOutElement.style.transition = `opacity ${animationSettings.duration}s ease`;
        fadeOutElement.style.pointerEvents = opacityOut <= 0.1 ? 'none' : 'auto';
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫ –Ω–∏–∂–Ω–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
        fadeInElement.style.opacity = opacityIn;
        fadeInElement.style.transition = `opacity ${animationSettings.duration}s ease`;
        fadeInElement.style.pointerEvents = opacityIn <= 0.1 ? 'none' : 'auto';
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∫—Ä–æ–ª–ª–∞ —Å —Ç—Ä–æ—Ç—Ç–ª–∏–Ω–≥–æ–º
    function handleScroll() {
        if (!ticking) {
            window.requestAnimationFrame(function() {
                updateOpacity();
                ticking = false;
            });
            ticking = true;
        }
    }

    function launchConfetti() {
        confetti({
            particleCount: 150,
            spread: 100,
            origin: { y: 0.6 }
        });
    }

    function createHeart() {
        const heart = document.createElement("div");
        heart.className = "heart";
        heart.style.left = Math.random() * window.innerWidth + "px";
        heart.style.top = "-50px"; // –Ω–∞—á–∏–Ω–∞–µ–º —Å–≤–µ—Ä—Ö—É
        heart.innerHTML = "‚ù§Ô∏è";
        document.body.appendChild(heart);

        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–∞–¥–µ–Ω–∏—è
        const fallDuration = 4000 + Math.random() * 2000;
        heart.animate([
            { transform: `translateY(0px) scale(1)`, opacity: 1 },
            { transform: `translateY(${window.innerHeight + 50}px) scale(1.5)`, opacity: 0 }
        ], {
            duration: fallDuration,
            easing: "linear"
        });

        // –£–¥–∞–ª—è–µ–º —Å–µ—Ä–¥—Ü–µ –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => heart.remove(), fallDuration);
    }

    function startHeartsRain() {
        if (heartsInterval) return; // —á—Ç–æ–±—ã –Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤
        heartsInterval = setInterval(createHeart, 200); // –∫–∞–∂–¥—ã–µ 200 –º—Å —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–µ —Å–µ—Ä–¥—Ü–µ
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    function init() {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏
        fadeOutElement.style.willChange = 'opacity';
        fadeOutElement.style.opacity = '1';
        
        fadeInElement.style.willChange = 'opacity';
        fadeInElement.style.opacity = '0'; // –ù–∞—á–∏–Ω–∞–µ–º —Å –Ω–µ–≤–∏–¥–∏–º–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        window.addEventListener('scroll', handleScroll);
        window.addEventListener('touchmove', handleScroll);
        window.addEventListener('resize', handleScroll);
        
        // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π —Ä–∞—Å—á—ë—Ç
        updateOpacity();

        document.addEventListener('gesturestart', function(e) {
            e.preventDefault();
            document.body.style.zoom = 1.0;
        });

         // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Ctrl+–∫–æ–ª–µ—Å–æ –º—ã—à–∏ –∏ Ctrl+–ø–ª—é—Å/–º–∏–Ω—É—Å
        document.addEventListener('keydown', function(e) {
        if ((e.ctrlKey || e.metaKey) && 
            (e.key === '+' || e.key === '-' || e.key === '=' || 
             e.keyCode === 187 || e.keyCode === 189 || e.wheelDelta)) {
            e.preventDefault();
        }
        });

        // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–≤–æ–π–Ω–æ–≥–æ —Ç–∞–ø–∞ –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è (–¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö)
        let lastTap = 0;
        document.addEventListener('touchend', function(e) {
            const now = Date.now();
            if (now - lastTap < 300) e.preventDefault();
            lastTap = now;
        });

    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    const codeLock = document.querySelector('.code-lock');
    const checkButton = document.getElementById('checkButton');
    const message = document.getElementById('message');
    const digits = [];
    const correctCode = [3, 1, 4, 7]; // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –±–ª–æ–∫–æ–≤
    function createDigitBlocks() {
        const russianAlphabet = ['–ê', '–ë', '–í', '–ì', '–î', '–ï', '–Å', '–ñ', '–ó', '–ò', '–ô', '–ö', '–õ', '–ú', '–ù', '–û', '–ü', '–†', '–°', '–¢', '–£', '–§', '–•', '–¶', '–ß', '–®', '–©', '–™', '–´', '–¨', '–≠', '–Æ', '–Ø'];
        
        for (let i = 0; i < 4; i++) {
            const block = document.createElement('div');
            block.className = 'digit-block';
            
            // –ö–Ω–æ–ø–∫–∞ –≤–≤–µ—Ä—Ö
            const upBtn = document.createElement('button');
            upBtn.textContent = '‚Üë';
            upBtn.addEventListener('click', () => changeLetter(i, 1));
            
            // –ë—É–∫–≤–∞
            const letter = document.createElement('div');
            letter.className = 'digit'; // –û—Å—Ç–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è —Å—Ç–∏–ª–µ–π
            letter.textContent = 'X';
            letter.id = `letter-${i}`;
            letters.push(0); // –•—Ä–∞–Ω–∏–º –∏–Ω–¥–µ–∫—Å—ã –±—É–∫–≤
            
            // –ö–Ω–æ–ø–∫–∞ –≤–Ω–∏–∑
            const downBtn = document.createElement('button');
            downBtn.textContent = '‚Üì';
            downBtn.addEventListener('click', () => changeLetter(i, -1));
            
            block.appendChild(upBtn);
            block.appendChild(letter);
            block.appendChild(downBtn);
            codeLock.appendChild(block);
        }
    }

    // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö –∏–Ω–¥–µ–∫—Å–æ–≤ –±—É–∫–≤
    const letters = [];

    // –§—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –±—É–∫–≤—ã
    function changeLetter(index, delta) {
        letters[index] += delta;
        
        // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ 0-32 (–≤—Å–µ–≥–æ 33 –±—É–∫–≤—ã –≤ —Ä—É—Å—Å–∫–æ–º –∞–ª—Ñ–∞–≤–∏—Ç–µ)
        if (letters[index] > 32) letters[index] = 0;
        if (letters[index] < 0) letters[index] = 32;
        
        document.getElementById(`letter-${index}`).textContent = 
            ['–ê', '–ë', '–í', '–ì', '–î', '–ï', '–Å', '–ñ', '–ó', '–ò', '–ô', '–ö', '–õ', '–ú', '–ù', '–û', '–ü', '–†', '–°', '–¢', '–£', '–§', '–•', '–¶', '–ß', '–®', '–©', '–™', '–´', '–¨', '–≠', '–Æ', '–Ø'][letters[index]];
    }

    // –í checkCode() –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å digits –Ω–∞ letters
    function checkCode() {
        const targetLetters = [4, 0, 25, 0]; // –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞: –ê-–ú-–ê (–∏–Ω–¥–µ–∫—Å—ã –±—É–∫–≤)
        let correct = true;
        
        for (let i = 0; i < 4; i++) {
            if (letters[i] !== targetLetters[i]) {
                correct = false;
                break;
            }
        }
        
        if (correct) {
            const element = document.getElementById('header');
            element.scrollIntoView({ behavior: 'smooth' });
            message.textContent = "–ö–æ–¥ –≤–µ—Ä–Ω—ã–π! –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω!";
            message.className = "message success"; // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å success
            
            document.querySelectorAll('.digit').forEach(d => {
                d.style.backgroundColor = "#ffebee"; /* –°–≤–µ—Ç–ª–æ-—Ä–æ–∑–æ–≤—ã–π */
                d.style.borderColor = "#e83e8c"; /* –Ø—Ä–∫–æ-—Ä–æ–∑–æ–≤—ã–π */
            });
            // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
            updateContractWithAnimation({
                text: `–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –æ:<br>
                       1. –ü–µ—Ä–µ–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –¥—Ä—É–∂–±—É –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è<br>
                       2. –û—Å—Ç–∞–≤–∏—Ç—å –≤—Å–µ –ø—É–Ω–∫—Ç—ã –ø—Ä–æ—à–ª–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞<br>
                       3. –î–∞–≤–∞–π –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è?`,
                party1: "–î–∞—à–µ–Ω—å–∫–∞",
                party2: "–í–ª–∞–¥–∏–∫",
                avatar1: "avatar1.jpg",
                avatar2: "avatar2.jpg"
            }, {
                title: "üåü –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä"
            });
            launchConfetti();
            startHeartsRain();
        } else {
            message.textContent = "–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.";
            message.className = "message error"; // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å error
            
            const digitsElements = document.querySelectorAll('.digit');
            for (let i = 0; i < 4; i++) {
                if (digits[i] !== correctCode[i]) {
                    digitsElements[i].style.backgroundColor = "#ffebee";
                    digitsElements[i].style.borderColor = "#ff4757"; /* –ö—Ä–∞—Å–Ω—ã–π */
                }
            }
            
            setTimeout(() => {
                digitsElements.forEach(d => {
                    d.style.backgroundColor = "#fff5f7";
                    d.style.borderColor = "#ff6b8b";
                });
            }, 1000);
        }
    }

    function updateContract(newText, party1Name, party2Name, avatar1Url, avatar2Url) {
        // –ú–µ–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
        const contractText = document.querySelector('.contract-text');
        contractText.innerHTML = newText;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∏
        const signatures = document.querySelectorAll('.signature span');
        signatures[0].textContent = party1Name;
        signatures[1].textContent = party2Name;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä—ã (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        if(avatar1Url) {
            document.querySelector('.signature img').src = avatar1Url;
        }
        if(avatar2Url) {
            document.querySelectorAll('.signature img')[1].src = avatar2Url;
        }
    }

    function updateContractWithAnimation(newContent, options = {}) {
        const contract = document.querySelector('.contract');
        contract.style.opacity = 0;
        
        setTimeout(() => {
            updateContract(
                newContent.text, 
                newContent.party1, 
                newContent.party2,
                newContent.avatar1,
                newContent.avatar2
            );
            
            if(options.title) {
                document.querySelector('.contract h2').textContent = options.title;
            }
            
            contract.style.opacity = 1;
            contract.style.transform = 'scale(1.05)';
            
            setTimeout(() => {
                contract.style.transform = 'scale(1)';
            }, 300);
            
        }, 500);
    }

    

    init();
    createDigitBlocks();
    checkButton.addEventListener('click', checkCode);
});